// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EqualExperts.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("HotelBookings")]
    public partial class HotelBookingsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HotelBookings.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HotelBookings", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
testRunner.Given("I have a browser open", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
  testRunner.And("I the url is \'http://hotel-test.equalexperts.io/\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a booking typing date values in big endian format")]
        public virtual void CreateABookingTypingDateValuesInBigEndianFormat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a booking typing date values in big endian format", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 8
testRunner.Given("I enter valid details into all required input fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
  testRunner.And("I set deposit to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
  testRunner.And("I type valid and logical dates directly into the checkin and checkout fields in b" +
                    "ig endian format yyyy-mm-dd", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.When("I click save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
testRunner.Then("my reservation will be created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
  testRunner.And("my booking details are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete a booking")]
        public virtual void DeleteABooking()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete a booking", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 16
testRunner.Given("I have created a booking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
testRunner.And("I click save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.When("I delete the booking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
testRunner.Then("the booking will be deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete all bookings")]
        public virtual void DeleteAllBookings()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete all bookings", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 22
testRunner.Given("I have one or more bookings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
testRunner.When("I delete all the bookings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
testRunner.Then("all the bookings will be deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("validation of input fields")]
        [NUnit.Framework.TestCaseAttribute("", "validSurname", "10.01", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("213", "validSur", "10.02", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("$%#%", "validSur", "10.03", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "", "10.04", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "1213", "10.05", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "$%#%", "10.06", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "fds", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "-10", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.123", "false", "2020-10-10", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.07", "false", "", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.08", "false", "tenth April", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.09", "false", "$%#%", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.10", "false", "20201010", "2020-10-11", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.11", "false", "2020-10-10", "", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.12", "false", "2020-10-10", "third April", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.13", "false", "2020-10-10", "$%#%", null)]
        [NUnit.Framework.TestCaseAttribute("vaidfirst", "validSur", "10.00", "false", "2020-10-10", "20201010", null)]
        public virtual void ValidationOfInputFields(string firstName, string surname, string price, string deposit, string checkIn, string checkOut, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("validation of input fields", exampleTags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "Price",
                        "Deposit",
                        "CheckIn",
                        "CheckOut"});
            table1.AddRow(new string[] {
                        string.Format("{0}", firstName),
                        string.Format("{0}", surname),
                        string.Format("{0}", price),
                        string.Format("{0}", deposit),
                        string.Format("{0}", checkIn),
                        string.Format("{0}", checkOut)});
#line 27
testRunner.Given("I entered the following data into the booking form:", ((string)(null)), table1, "Given ");
#line 30
testRunner.When("I click save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
testRunner.Then("a booking is NOT created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
